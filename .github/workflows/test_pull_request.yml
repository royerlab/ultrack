# Reference: napari/napari github workflows
name: test PR

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, edited]
    # branches:
    #   - main
  pull_request_review:
    types: [submitted]

jobs:
  test:
    name: ${{ matrix.platform }} ${{ matrix.python }} ${{ matrix.toxenv || matrix.backend }}
    if: github.event.pull_request.draft == false
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
        python: ["3.10", "3.12"]
        backend: [pyqt5]
        include:
          # - python: 3.11
          #   platform: windows-latest
          #   backend: pyqt5
          # - python: 3.11
          #   platform: macos-13  # latest not-arm version
          #   backend: pyside2
          - python: 3.11 # only this run execute coverage
            platform: ubuntu-latest
            backend: pyside6
            coverage: true

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v4

      # see https://github.com/actions/runner-images/issues/709#issuecomment-612569242
      - name: Workaround to free up space on github runner
        if: runner.os == 'Linux'
        run: sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - uses: tlambert03/setup-qt-libs@v1

      - uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python }}
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"

      - name: Setup headless display (All platforms)
        uses: pyvista/setup-headless-display-action@v4.2
        with:
          qt: true
          wm: herbstluftwm

      # tox and tox-gh-actions will take care of the "actual" installation
      # of python dependendencies into a virtualenv.  see tox.ini for more
      - name: Install dependencies
        run: |
          uv pip install setuptools tox tox-gh-actions
          uv pip install ".[test]"

      # here we pass off control of environment creation and running of tests to tox
      # tox-gh-actions, installed above, helps to convert environment variables into
      # tox "factors" ... limiting the scope of what gets tested on each platform
      # for instance, on ubuntu-latest with python 3.8, it would be equivalent to this command:
      # `tox -e py38-linux-pyqt,py38-linux-pyside`
      # see tox.ini for more
      - name: Test with tox
        uses: aganders3/headless-gui@v1
        with:
          run: uv run pytest -v --ignore ultrack/api/_test

      - name: Coverage
        if: ${{ matrix.coverage }}
        uses: codecov/codecov-action@v5
